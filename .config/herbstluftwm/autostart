#!/bin/sh

hc() {
    herbstclient "$@"
}

hc emit_hook reload

# keybindings {{{
# remove all existing keybindings
hc keyunbind --all

# if you have a super key you will be much happier with Mod set to Mod4
#Mod=Mod1    # Use alt as the main modifier
Mod=Mod4   # Use the super key as the main modifier

hc keybind $Mod-Shift-q spawn sysask
hc keybind $Mod-Shift-c close_or_remove
hc keybind $Mod-Return spawn tym
hc keybind $Mod-d spawn rofi -show run

# basic movement in tiling and floating mode
# focusing clients
hc keybind $Mod-h     focus left
hc keybind $Mod-j     focus down
hc keybind $Mod-k     focus up
hc keybind $Mod-l     focus right

# moving clients in tiling and floating mode
hc keybind $Mod-Shift-h     shift left
hc keybind $Mod-Shift-j     shift down
hc keybind $Mod-Shift-k     shift up
hc keybind $Mod-Shift-l     shift right

# splitting frames
# create an empty frame at the specified direction
hc keybind $Mod-u       split   bottom  0.5
hc keybind $Mod-o       split   right   0.5
# let the current frame explode into subframes
hc keybind $Mod-Control-space split explode

# resizing frames and floating clients
resizestep=0.02
hc keybind $Mod-Control-h       resize left +$resizestep
hc keybind $Mod-Control-j       resize down +$resizestep
hc keybind $Mod-Control-k       resize up +$resizestep
hc keybind $Mod-Control-l       resize right +$resizestep

# tags
index=0
tags="term web media games misc"
hc rename default term || true
for i in $tags; do
    hc add "$i"
    key="$((index+1))"
    if [ -n "$key" ] ; then
        hc keybind "$Mod-$key" use_index "$index"
        hc keybind "$Mod-Shift-$key" move_index "$index"
        index="$((index+1))"
    fi
done

# cycle through tags
hc keybind $Mod-period use_index +1 --skip-visible
hc keybind $Mod-comma  use_index -1 --skip-visible

# layouting
hc keybind $Mod-r remove
hc keybind $Mod-s floating toggle
hc keybind $Mod-f fullscreen toggle
hc keybind $Mod-Shift-f set_attr clients.focus.floating toggle
hc keybind $Mod-Shift-m set_attr clients.focus.minimized true
hc keybind $Mod-Control-m jumpto last-minimized
hc keybind $Mod-p pseudotile toggle
# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
hc keybind $Mod-space                                                           \
            or , and . compare tags.focus.curframe_wcount = 2                   \
                     . cycle_layout +1 vertical horizontal max vertical grid    \
               , cycle_layout +1

# mouse
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

# focus
hc keybind $Mod-BackSpace   cycle_monitor
hc keybind $Mod-Tab         cycle_all +1
hc keybind $Mod-Shift-Tab   cycle_all -1
hc keybind $Mod-c cycle
hc keybind $Mod-i jumpto urgent

# media keys
hc keybind XF86AudioRaiseVolume spawn pamixer -i 5
hc keybind XF86AudioLowerVolume spawn pamixer -d 5
hc keybind XF86AudioMute spawn pamixer -t

hc keybind XF86AudioPrev spawn playerctl previous
hc keybind XF86AudioNext spawn playerctl next
hc keybind XF86AudioPlay spawn playerctl play-pause

hc keybind XF86MonBrightnessUp spawn xbacklight -inc 15
hc keybind XF86MonBrightnessDown spawn xbacklight -dec 15

hc keybind Print spawn sh -c "maim -u | xclip -selection clipboard -t image/png"
hc keybind Shift-Print spawn sh -c "maim -su | xclip -selection clipboard -t image/png"

hc keybind $Mod-Control-r spawn giph --stop
hc keybind $Mod-Control-p spawn sh -c "pkill pipewire && herbstclient reload"

hc keybind $Mod-Control-Shift-y spawn ytfzf -D --pages=2
hc keybind $Mod-Control-Shift-b spawn $BROWSER
hc keybind $Mod-Control-Shift-m spawn tym --title "music" -e music
hc keybind $Mod-Control-Shift-n spawn tym --title "rss" -e newsboat
hc keybind $Mod-b chain , pad 0 0 , cycle_value settings.frame_gap 0 1 , spawn polybar-msg cmd toggle
# }}}

# rules {{{
hc unrule -F
hc rule focus=on # normally focus new clients
hc set focus_follows_mouse 1
hc rule floatplacement=smart
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' floating=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off
hc rule once class~"[F-f]irefox.*" tag=web
hc rule once class~"[V-v]imb" tag=web
hc rule once instance~"[V-v]imb" tag=web
hc rule once class~"[C-c]hromium" tag=web
hc rule class="KeePassXC" floating=on
hc rule class="TelegramDesktop" tag=web floating=on
hc rule class="Element" tag=web floating=on
hc rule class="Steam" floating=on
hc rule class~".*\.exe" floating=on
hc rule title="music" tag=media switchtag=on
hc rule title="rss" tag=media switchtag=on
hc rule class~"[L-l]utris" tag=games
hc rule class~"[X-x]onotic.*" tag=games
hc rule class~"[R-r]etroarch" tag=games
hc rule title="Picture-in-Picture" tag=0
# }}}

hc set tree_style '╾│ ├└╼─┐'

# theme {{{
bg=$(xrdb -get background)
bg_alt=$(xrdb -get color10)
fg=$(xrdb -get foreground)
fg_alt=$(xrdb -get color15)
focus=$(xrdb -get color14)
urgent=$(xrdb -get color1)

hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1
hc set frame_border_normal_color "$bg_alt"
hc set frame_border_active_color "$focus"
hc set frame_bg_normal_color "$bg_alt"
hc set frame_bg_active_color "$focus"
hc set frame_border_width 0
hc set always_show_frame on
hc set frame_bg_transparent on
hc set frame_gap 1
hc set smart_frame_surroundings on

hc attr theme.background_color "$bg"
hc attr theme.normal.color "$bg"
hc attr theme.active.color "$focus"
hc attr theme.urgent.color "$urgent"
hc attr theme.border_width 0
hc attr theme.title_font "Iosevka Aile:size=10"
hc attr theme.title_color "$bg"
hc attr theme.normal.title_color "$fg"
hc attr theme.floating.normal.color "$bg_alt"
hc attr theme.floating.active.color "$bg_alt"
hc attr theme.floating.border_width 1

hc watch tags.focus.frame_count
hc -i attribute_changed tags.focus.frame_count | while read -r frame; do
    hc or / and , compare tags.focus.frame_count = 1 , set frame_transparent_width 0 / set frame_transparent_width 1
done &
# }}}

# unlock, just to be sure
hc unlock

# do multi monitor setup here, e.g.:
# hc set_monitors 1280x1024+0+0 1280x1024+1280+0
# or simply:
hc detect_monitors
hc set auto_detect_monitors 1

hsetroot -full "$XDG_DATA_HOME/wall.png" &
pgrep -x pipewire || pipewire &
pgrep -x pipewire-pulse || pipewire-pulse &
pgrep -x picom || picom -b --experimental-backends &
dz_col &

# if you are gonna launch multiple bars then use pkill or something instead
{
    # reserve some space
    hc pad 0 23
    # launch polybar
    polybar bar -r &
    pid="$!"
    # wait until the panels should be stopped
    herbstclient -w '(quit_panel|reload)'
    # stop all started panels
    kill "$pid"
    hc pad 0 0
} &

# vim:foldmethod=marker
